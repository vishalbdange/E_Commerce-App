{"ast":null,"code":"import { combineReducers, applyMiddleware, createStore } from 'redux'; // import thunk from 'redux-thunk';\n\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // import loadingReducer from './reducers/loadingReducers';\n\nimport messageReducer from './reducers/messageReducers';\nimport categoryReducer from './reducers/categoryReducers'; // import productReducer from './reducers/productReducers';\n\nimport loadingReducer from './reducers/loadingReducers'; // import productReducer from './reducers/productReducers';\n\nconst reducer = combineReducers({\n  loading: loadingReducer,\n  messages: messageReducer,\n  categories: categoryReducer,\n  products: productReducer\n});\nconst initialState = {}; // const middleware = [thunk];\n\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\nconst store = createStore(reducer, initialState, composedEnhancer);\nexport default store;","map":{"version":3,"sources":["C:/projects/E_Commerce-App/client/src/redux/store.js"],"names":["combineReducers","applyMiddleware","createStore","thunkMiddleware","composeWithDevTools","messageReducer","categoryReducer","loadingReducer","reducer","loading","messages","categories","products","productReducer","initialState","composedEnhancer","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D,C,CACA;;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,eAAP,MAA4B,6BAA5B,C,CACA;;AACA,OAAOC,cAAP,MAA2B,4BAA3B,C,CACA;;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC/BS,EAAAA,OAAO,EAAEF,cADsB;AAE/BG,EAAAA,QAAQ,EAAEL,cAFqB;AAG/BM,EAAAA,UAAU,EAAEL,eAHmB;AAI/BM,EAAAA,QAAQ,EAAEC;AAJqB,CAAD,CAA/B;AAOA,MAAMC,YAAY,GAAG,EAArB,C,CAEA;;AACA,MAAMC,gBAAgB,GAAGX,mBAAmB,CAACH,eAAe,CAACE,eAAD,CAAhB,CAA5C;AAEA,MAAMa,KAAK,GAAGd,WAAW,CACxBM,OADwB,EAExBM,YAFwB,EAGxBC,gBAHwB,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { combineReducers, applyMiddleware, createStore } from 'redux';\r\n// import thunk from 'redux-thunk';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n// import loadingReducer from './reducers/loadingReducers';\r\nimport messageReducer from './reducers/messageReducers';\r\nimport categoryReducer from './reducers/categoryReducers';\r\n// import productReducer from './reducers/productReducers';\r\nimport loadingReducer from './reducers/loadingReducers';\r\n// import productReducer from './reducers/productReducers';\r\n\r\nconst reducer = combineReducers({\r\n\tloading: loadingReducer,\r\n\tmessages: messageReducer,\r\n\tcategories: categoryReducer,\r\n\tproducts: productReducer,\r\n});\r\n\r\nconst initialState = {};\r\n\r\n// const middleware = [thunk];\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n\r\nconst store = createStore(\r\n\treducer,\r\n\tinitialState,\r\n\tcomposedEnhancer\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}