{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\E_Commerce-App\\\\client\\\\src\\\\components\\\\Auth\\\\SignUp\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { FormControl, Input, InputLabel, Button, Grid, Typography, formatMs } from \"@material-ui/core\";\nimport isEmail from \"validator/lib/isEmail\";\nimport isEmpty from \"validator/lib/isEmpty\";\nimport equals from \"validator/lib/equals\";\nimport useStyles from \"./styles\";\nimport { showSuccessMsg } from \"../../../helper/showSuccessMsg\";\nimport { showErrorMsg } from \"../../../helper/showErrorMsg\";\nimport { Loading } from \"../../../helper/Loading\";\nimport { signUp } from \"../../../api/auth.js\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  let history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    successMsg: false,\n    errorMsg: false,\n    loading: false\n  });\n  const {\n    username,\n    email,\n    password,\n    password2,\n    successMsg,\n    errorMsg,\n    loading\n  } = formData;\n  /********************** *\r\n   Event Handlers\r\n   *********************/\n\n  const handlechange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value,\n      errorMsg: '',\n      successMsg: ''\n    });\n  };\n\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault(); //client side validation\n\n    if (isEmpty(username) || isEmpty(email) || isEmpty(password) || isEmpty(password2)) {\n      setFormData({ ...formData,\n        errorMsg: \"All Fields are Required\"\n      });\n    } else if (!isEmail(email)) {\n      setFormData({ ...formData,\n        errorMsg: \"Invalid Email\"\n      });\n    } else if (!equals(password, password2)) {\n      setFormData({ ...formData,\n        errorMsg: \"Passwords do not match\"\n      });\n    } else {\n      const {\n        username,\n        email,\n        password,\n        password2\n      } = formData;\n      const data = {\n        username,\n        email,\n        password\n      };\n      setFormData({ ...formData,\n        loading: true\n      });\n      signUp(data).then(response => {\n        console.log(response);\n        setFormData({\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          password2: \"\",\n          successMsg: response.data.successMessage,\n          loading: false,\n          errorMsg\n        });\n      }).catch(err => {\n        console.log(\"Axxios Sign Up error\", err, err.response);\n        setFormData({ ...formData,\n          loading: false,\n          errorMsg: err\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.parent,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: Loading()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }, this), errorMsg && showErrorMsg(errorMsg), successMsg && showSuccessMsg(successMsg), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Sign Up \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          required: true,\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"username\",\n            value: username,\n            type: \"username\",\n            autoComplete: \"username\",\n            onChange: handlechange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          required: true,\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"email\",\n            children: \"e-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            value: email,\n            type: \"email\",\n            autoComplete: \"email\",\n            onChange: handlechange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          required: true,\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"password\",\n            children: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            value: password,\n            type: \"password\",\n            onChange: handlechange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          required: true,\n          fullWidth: true,\n          margin: \"normal\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"passwordConfirm\",\n            children: \"confrim password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password2\",\n            value: password2,\n            type: \"password\",\n            onChange: handlechange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          color: \"primary\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [\"Have an Account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signin\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(formData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignUp, \"U7tj8Wr2YugSMfNIFWP/qr8kIxs=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/projects/E_Commerce-App/client/src/components/Auth/SignUp/SignUp.js"],"names":["React","useState","Link","CssBaseline","FormControl","Input","InputLabel","Button","Grid","Typography","formatMs","isEmail","isEmpty","equals","useStyles","showSuccessMsg","showErrorMsg","Loading","signUp","useHistory","SignUp","history","formData","setFormData","username","email","password","password2","successMsg","errorMsg","loading","handlechange","e","target","name","value","classes","handleSubmit","preventDefault","data","then","response","console","log","successMessage","catch","err","parent","form","textAlign","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { FormControl, Input, InputLabel, Button, Grid, Typography, formatMs } from \"@material-ui/core\";\r\nimport isEmail from \"validator/lib/isEmail\"\r\nimport isEmpty from \"validator/lib/isEmpty\"\r\nimport equals from \"validator/lib/equals\"\r\nimport useStyles from \"./styles\"\r\nimport { showSuccessMsg } from \"../../../helper/showSuccessMsg\"\r\nimport { showErrorMsg } from \"../../../helper/showErrorMsg\"\r\nimport { Loading } from \"../../../helper/Loading\"\r\nimport {signUp} from \"../../../api/auth.js\"\r\nimport {useHistory} from \"react-router-dom\"\r\nconst SignUp = () => {\r\n    let history = useHistory();\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n    successMsg: false,\r\n    errorMsg: false,\r\n    loading: false\r\n  })\r\n  const {\r\n    username,\r\n    email,\r\n    password,\r\n    password2,\r\n    successMsg,\r\n    errorMsg,\r\n    loading\r\n  } = formData;\r\n\r\n  /********************** *\r\n   Event Handlers\r\n   *********************/\r\n  const handlechange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value, errorMsg: '', successMsg: '' })\r\n  }\r\n  const classes = useStyles();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //client side validation\r\n    if (isEmpty(username) || isEmpty(email) || isEmpty(password) || isEmpty(password2)) {\r\n      setFormData({\r\n        ...formData, errorMsg: \"All Fields are Required\"\r\n      })\r\n    } else if (!isEmail(email)) {\r\n      setFormData({\r\n        ...formData, errorMsg: \"Invalid Email\"\r\n      })\r\n    }\r\n    else if (!equals(password, password2)) {\r\n      setFormData({\r\n        ...formData, errorMsg: \"Passwords do not match\"\r\n      })\r\n    }\r\n    else {\r\n      const { username, email, password, password2 } = formData;\r\n      const data = { username, email, password };\r\n      setFormData({\r\n        ...formData, loading: true\r\n      })\r\n\r\n      signUp(data)\r\n        .then(response=>{\r\n            console.log(response);\r\n            setFormData({\r\n              username : \"\", \r\n              email : \"\",\r\n              password : \"\",\r\n              password2 : \"\",\r\n              successMsg : response.data.successMessage,\r\n              loading : false,\r\n              errorMsg,\r\n             \r\n            })\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Axxios Sign Up error\",err,err.response);\r\n          setFormData({...formData,loading : false,errorMsg: err});\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <div className={classes.parent}>\r\n\r\n        <form className={classes.form}>\r\n          {loading && <div className={classes.loading}>{Loading()}</div>}\r\n          {errorMsg && showErrorMsg(errorMsg)}\r\n          {successMsg && showSuccessMsg(successMsg)}\r\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>Sign Up </Typography>\r\n          <FormControl required fullWidth margin=\"normal\">\r\n            <InputLabel htmlFor=\"username\">\r\n              Username\r\n                </InputLabel>\r\n            <Input\r\n              name=\"username\"\r\n              value={username}\r\n              type=\"username\"\r\n              autoComplete=\"username\"\r\n              onChange={handlechange}\r\n            />\r\n          </FormControl>\r\n          <FormControl required fullWidth margin=\"normal\">\r\n            <InputLabel htmlFor=\"email\">\r\n              e-mail\r\n                </InputLabel>\r\n            <Input\r\n              name=\"email\"\r\n              value={email}\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              onChange={handlechange}\r\n            />\r\n          </FormControl>\r\n          <FormControl required fullWidth margin=\"normal\">\r\n            <InputLabel htmlFor=\"password\" >\r\n              password\r\n                </InputLabel>\r\n            <Input\r\n              name=\"password\"\r\n              value={password}\r\n              type=\"password\"\r\n              onChange={handlechange}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl required fullWidth margin=\"normal\">\r\n            <InputLabel htmlFor=\"passwordConfirm\">\r\n              confrim password\r\n                </InputLabel>\r\n            <Input\r\n              name=\"password2\"\r\n              value={password2}\r\n              type=\"password\"\r\n              onChange={handlechange}\r\n            />\r\n          </FormControl>\r\n          <Button\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Join\r\n              </Button>\r\n          <p style={{ textAlign: \"center\", }}>Have an Account? <Link to=\"/signin\">Login</Link></p>\r\n        </form>\r\n      </div>\r\n\r\n      <p>{JSON.stringify(formData)}</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}