{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\E_Commerce-App\\\\client\\\\src\\\\components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { AppBar, Toolbar, Typography, Button, IconButton, Drawer, Avatar, Tooltip, Fab } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport useStyles from \"./styles.js\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { isAuthenticated } from \"../../helper/auth.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const {\n    mobileloginMenu,\n    parentTool,\n    midNavbar,\n    appBarSpacer,\n    logo,\n    menuButton,\n    appBar,\n    brandContainer,\n    toolbar,\n    drawerContainer,\n    image,\n    heading\n  } = useStyles();\n  const [state, setState] = useState({\n    mobileView: false,\n    drawerOpen: false\n  }); //Setting state fro mobileview\n\n  const {\n    mobileView,\n    drawerOpen\n  } = state;\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  }; //get user data\n\n\n  useEffect(() => {\n    //Function which returns the current view of the window.\n    const setResponsiveness = () => {\n      return window.innerWidth < 900 && window.innerWidth > 100 ? setState(prevState => ({ ...prevState,\n        mobileView: true\n      })) : setState(prevState => ({ ...prevState,\n        mobileView: false\n      }));\n    };\n\n    setResponsiveness();\n    window.addEventListener(\"resize\", () => setResponsiveness());\n  }, []);\n\n  const getDrawerChoices = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !isAuthenticated() && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          color: \"inherit\",\n          className: menuButton,\n          children: /*#__PURE__*/_jsxDEV(MenuItem, {\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, \"Home\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          color: \"inherit\",\n          className: menuButton,\n          children: /*#__PURE__*/_jsxDEV(MenuItem, {\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, \"Sign Up\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signin\",\n          color: \"inherit\",\n          className: menuButton,\n          children: /*#__PURE__*/_jsxDEV(MenuItem, {\n            children: \"signin \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, \"signin \", false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  };\n\n  const getMenuButtons = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: midNavbar,\n        children: !isAuthenticated() && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: menuButton,\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: menuButton,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"signin\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: menuButton,\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  {\n    /* // return navData.map(({label,href}) => {\r\n    //     return (\r\n    //         <Button\r\n    //             {...{\r\n    //                 component :RouterLink,\r\n    //                 to : href,\r\n    //                 key : label,\r\n    //                 className : menuButton,\r\n    //                 onClick:{logOut}\r\n    //             }}\r\n     //         >\r\n    //         {label}\r\n    //         </Button>\r\n    //     );\r\n    // })\r\n    }; */\n  } ///DisplayDesktop() Functionality\n  //Writing displayMobile() functionality\n\n  const displayDesktop = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MenuBookIcon, {\n        style: {\n          margin: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: toolbar,\n        children: getMenuButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const displayMobile = () => {\n    const handleDrawerOpen = () => {\n      setState(prevState => ({ ...prevState,\n        drawerOpen: true\n      }));\n    };\n\n    const handleDrawerClose = () => {\n      setState(prevState => ({ ...prevState,\n        drawerOpen: false\n      }));\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: parentTool,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          //Allows Button to be Positioned at the start\n          color: \"inherit\",\n          //lets the icon the color specified to closest top level component\n          \"aria-label\": \"menu\",\n          //These two meant for screen readers to notify users ,this element is menu , this element is pop up\n          \"aria-haspopup\": \"true\",\n          onClick: handleDrawerOpen,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          anchor: \"left\",\n          open: drawerOpen,\n          onClose: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: drawerContainer,\n            children: getDrawerChoices()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuBookIcon, {\n          style: {\n            margin: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: appBar,\n      position: \"fixed\",\n      children: mobileView ? displayMobile() : displayDesktop()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: appBarSpacer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Navbar, \"Lh3w1fnFPOVV4Gck5N42ckh6Qkw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Navbar;\nexport default _c2 = withRouter(Navbar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/projects/E_Commerce-App/client/src/components/Navbar/Navbar.js"],"names":["React","useEffect","useState","Fragment","AppBar","Toolbar","Typography","Button","IconButton","Drawer","Avatar","Tooltip","Fab","MenuIcon","useStyles","Link","withRouter","MenuBookIcon","Menu","MenuItem","isAuthenticated","Navbar","mobileloginMenu","parentTool","midNavbar","appBarSpacer","logo","menuButton","appBar","brandContainer","toolbar","drawerContainer","image","heading","state","setState","mobileView","drawerOpen","handleClick","event","setAnchorEl","currentTarget","handleClose","setResponsiveness","window","innerWidth","prevState","addEventListener","getDrawerChoices","getMenuButtons","displayDesktop","margin","displayMobile","handleDrawerOpen","handleDrawerClose","edge","color","onClick","anchor","open","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,QAApC,QAAoD,OAApD;AAEA,SACEC,MADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,MAPF,EAQEC,OARF,EASEC,GATF,QAUO,mBAVP;AAWA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,eAAT,QAAgC,sBAAhC;;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA,MAPI;AAQJC,IAAAA,cARI;AASJC,IAAAA,OATI;AAUJC,IAAAA,eAVI;AAWJC,IAAAA,KAXI;AAYJC,IAAAA;AAZI,MAaFnB,SAAS,EAbb;AAgBA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,CAAC;AACjCkC,IAAAA,UAAU,EAAE,KADqB;AAEjCC,IAAAA,UAAU,EAAE;AAFqB,GAAD,CAAlC,CAjBmB,CAqBnB;;AACA,QAAM;AAAED,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6BH,KAAnC;;AAGA,QAAMI,WAAW,GAAIC,KAAD,IAAW;AAC7BC,IAAAA,WAAW,CAACD,KAAK,CAACE,aAAP,CAAX;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD,CA7BmB,CAiCnB;;;AAEAvC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAM0C,iBAAiB,GAAG,MAAM;AAC9B,aAAOC,MAAM,CAACC,UAAP,GAAoB,GAApB,IAA2BD,MAAM,CAACC,UAAP,GAAoB,GAA/C,GACHV,QAAQ,CAAEW,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBV,QAAAA,UAAU,EAAE;AAA5B,OAAhB,CAAD,CADL,GAEHD,QAAQ,CAAEW,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBV,QAAAA,UAAU,EAAE;AAA5B,OAAhB,CAAD,CAFZ;AAGD,KAJD;;AAKAO,IAAAA,iBAAiB;AAEjBC,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkC,MAAMJ,iBAAiB,EAAzD;AACD,GAVQ,EAUN,EAVM,CAAT;;AAaA,QAAMK,gBAAgB,GAAG,MAAM;AAG7B,wBACE;AAAA,gBAEG,CAAC5B,eAAe,EAAhB,iBACC,QAAC,QAAD;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,EAAE,EAAC,GADL;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,SAAS,EAAEO,UAHb;AAAA,iCAME,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF,WAIM,MAJN;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,IAAD;AACE,UAAA,EAAE,EAAC,SADL;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,SAAS,EAAEA,UAHb;AAAA,iCAME,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF,WAIM,SAJN;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE,QAAC,IAAD;AACE,UAAA,EAAE,EAAC,SADL;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,SAAS,EAAEA,UAHb;AAAA,iCAME,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF,WAIM,SAJN;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,qBADF;AAkCD,GArCD;;AAuCF,QAAMsB,cAAc,GAAG,MAAM;AACzB,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEzB,SAAhB;AAAA,kBAGE,CAACJ,eAAe,EAAhB,iBACA,QAAC,QAAD;AAAA,kCACE,QAAC,IAAD;AAAO,YAAA,EAAE,EAAC,GAAV;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAEO,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,SAAT;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,eAWE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,QAAT;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AA0BE,GA3BN;;AA4BI;AAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,GAnIa,CAqInB;AAEA;;AACA,QAAMuB,cAAc,GAAG,MAAM;AAC3B,wBACE;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAErB,OAApB;AAAA,kBAA8BmB,cAAc;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD,GAPD;;AASA,QAAMG,aAAa,GAAG,MAAM;AAC1B,UAAMC,gBAAgB,GAAG,MAAM;AAC7BlB,MAAAA,QAAQ,CAAEW,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBT,QAAAA,UAAU,EAAE;AAA5B,OAAhB,CAAD,CAAR;AACD,KAFD;;AAGA,UAAMiB,iBAAiB,GAAG,MAAM;AAC9BnB,MAAAA,QAAQ,CAAEW,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgBT,QAAAA,UAAU,EAAE;AAA5B,OAAhB,CAAD,CAAR;AACD,KAFD;;AAIA,wBACE;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEd,UAApB;AAAA,gCACE,QAAC,UAAD;AAEIgC,UAAAA,IAAI,EAAE,OAFV;AAEmB;AACfC,UAAAA,KAAK,EAAE,SAHX;AAGsB;AAClB,wBAAc,MAJlB;AAI0B;AACtB,2BAAiB,MALrB;AAMIC,UAAAA,OAAO,EAAEJ,gBANb;AAAA,iCASE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,MAAD;AAEIK,UAAAA,MAAM,EAAE,MAFZ;AAGIC,UAAAA,IAAI,EAAEtB,UAHV;AAIIuB,UAAAA,OAAO,EAAEN,iBAJb;AAAA,iCAOE;AAAK,YAAA,SAAS,EAAEvB,eAAhB;AAAA,sBAAkCiB,gBAAgB;AAAlD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAsBE,QAAC,YAAD;AAAc,UAAA,KAAK,EAAE;AAAEG,YAAAA,MAAM,EAAE;AAAV;AAArB;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AA4BD,GApCD;;AAsCA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEvB,MAAnB;AAA2B,MAAA,QAAQ,EAAC,OAApC;AAAA,gBACGQ,UAAU,GAAGgB,aAAa,EAAhB,GAAqBF,cAAc;AADhD;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEzB;AAAhB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CAhMD;;GAAMJ,M;UAcAP,S;;;KAdAO,M;AAkMN,qBAAeL,UAAU,CAACK,MAAD,CAAzB","sourcesContent":["import React, { useEffect, useState,Fragment } from \"react\";\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  Avatar,\r\n  Tooltip,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport useStyles from \"./styles.js\";\r\nimport { Link , withRouter } from \"react-router-dom\"\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { isAuthenticated } from \"../../helper/auth.js\";\r\n\r\n\r\nconst Navbar = () => {\r\n  const {\r\n    mobileloginMenu,\r\n    parentTool,\r\n    midNavbar,\r\n    appBarSpacer,\r\n    logo,\r\n    menuButton,\r\n    appBar,\r\n    brandContainer,\r\n    toolbar,\r\n    drawerContainer,\r\n    image,\r\n    heading,\r\n  } = useStyles();\r\n\r\n \r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n  //Setting state fro mobileview\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  //get user data\r\n\r\n  useEffect(() => {\r\n    //Function which returns the current view of the window.\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900 && window.innerWidth > 100\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n\r\n\r\n  const getDrawerChoices = () => {\r\n \r\n\r\n    return (\r\n      <>\r\n      {\r\n        (!isAuthenticated() &&\r\n          <Fragment >\r\n            <Link\r\n              to=\"/\"\r\n              color=\"inherit\"\r\n              className={menuButton}\r\n              key=\"Home\"\r\n            >\r\n              <MenuItem>Home</MenuItem>\r\n            </Link>   \r\n            <Link\r\n              to=\"/signup\"\r\n              color=\"inherit\"\r\n              className={menuButton}\r\n              key=\"Sign Up\"\r\n            >\r\n              <MenuItem>Sign Up</MenuItem>\r\n            </Link>\r\n            <Link\r\n              to=\"/signin\"\r\n              color=\"inherit\"\r\n              className={menuButton}\r\n              key=\"signin \"\r\n            >\r\n              <MenuItem>signin </MenuItem>\r\n            </Link>\r\n          </Fragment>\r\n        )}\r\n\r\n      </>\r\n    );\r\n  };\r\n\r\nconst getMenuButtons = () => {\r\n    return (\r\n      <>\r\n        <div className={midNavbar}>\r\n\r\n        {\r\n         (!isAuthenticated() && \r\n          <Fragment>\r\n            <Link  to=\"/\">\r\n              <Button className={menuButton}>\r\n                Home\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/signup\">\r\n              <Button className={menuButton}>\r\n                Sign Up\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"signin\">\r\n              <Button className={menuButton}>\r\n                Sign In\r\n              </Button>\r\n            </Link>\r\n          </Fragment>\r\n         )}\r\n        </div>\r\n        </>\r\n    )}\r\n    {/* // return navData.map(({label,href}) => {\r\n    //     return (\r\n    //         <Button\r\n    //             {...{\r\n    //                 component :RouterLink,\r\n    //                 to : href,\r\n    //                 key : label,\r\n    //                 className : menuButton,\r\n    //                 onClick:{logOut}\r\n    //             }}\r\n\r\n    //         >\r\n    //         {label}\r\n    //         </Button>\r\n    //     );\r\n    // })\r\n  }; */}\r\n\r\n  ///DisplayDesktop() Functionality\r\n\r\n  //Writing displayMobile() functionality\r\n  const displayDesktop = () => {\r\n    return (\r\n      <>\r\n        <MenuBookIcon style={{ margin: \"20px\" }} />\r\n        <Toolbar className={toolbar}>{getMenuButtons()}</Toolbar>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const displayMobile = () => {\r\n    const handleDrawerOpen = () => {\r\n      setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n    };\r\n    const handleDrawerClose = () => {\r\n      setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Toolbar className={parentTool}>\r\n          <IconButton\r\n            {...{\r\n              edge: \"start\", //Allows Button to be Positioned at the start\r\n              color: \"inherit\", //lets the icon the color specified to closest top level component\r\n              \"aria-label\": \"menu\", //These two meant for screen readers to notify users ,this element is menu , this element is pop up\r\n              \"aria-haspopup\": \"true\",\r\n              onClick: handleDrawerOpen,\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer\r\n            {...{\r\n              anchor: \"left\",\r\n              open: drawerOpen,\r\n              onClose: handleDrawerClose,\r\n            }}\r\n          >\r\n            <div className={drawerContainer}>{getDrawerChoices()}</div>\r\n          </Drawer>\r\n\r\n          <MenuBookIcon style={{ margin: \"20px\" }} />\r\n        </Toolbar>\r\n        </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar className={appBar} position=\"fixed\">\r\n        {mobileView ? displayMobile() : displayDesktop()}\r\n      </AppBar>\r\n\r\n      <div className={appBarSpacer}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n"]},"metadata":{},"sourceType":"module"}